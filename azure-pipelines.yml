trigger:
- master

variables:
  buildConfiguration: 'Release'

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
    - job: Windows
      pool:
        vmImage: 'windows-latest'
      steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK (based on global.json)'
        inputs:
          packageType: 'sdk'
          useGlobalJson: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - powershell: .\build.cmd target CIBuild
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'Windows build and test'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: 'testResults/TestResults-*.xml' 
          mergeTestResults: true

    - job: Linux
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK (based on global.json)'
        inputs:
          packageType: 'sdk'
          useGlobalJson: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - bash: ./build.sh target CIBuild
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: 'Linux build and test'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: 'testResults/TestResults-*.xml' 
          mergeTestResults: true

- stage: PublishDocs
  displayName: 'Publish generated docs'
  dependsOn: BuildAndTest
  jobs:
    - job: Linux
      displayName: 'Publish the docs'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK (based on global.json)'
        inputs:
          packageType: 'sdk'
          useGlobalJson: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - bash: ./build.sh target ReleaseDocs
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: 'Linux build and test'
        env:
          git-config-email: $(git-config-email)
          git-config-username: $(git-config-username)
